import{r as c,o as l,c as p,a,w as e,F as r,b as n,e as s}from"./app.d8b64c72.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const i={},k=n("h1",{id:"ordering",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ordering","aria-hidden":"true"},"#"),s(" Ordering")],-1),d=n("p",null,[s("The ordering query expression can be built with a comma-delimited ordered list of field/property names followed by "),n("strong",null,[n("code",null,"asc")]),s(" or "),n("strong",null,[n("code",null,"desc")]),s(" keywords.")],-1),m=n("p",null,"By default, if you don't add these keywords, Gridify assumes you need Ascending ordering.",-1),b=n("p",null,"ascending and descending",-1),g=n("div",{class:"language-csharp ext-cs line-numbers-mode"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token comment"},"// asc - desc"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" response "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-method"},[n("span",{class:"token function"},"SearchAsync"),n("span",{class:"token generic class-name"},[n("span",{class:"token punctuation"},"<"),s("User"),n("span",{class:"token punctuation"},">")])]),n("span",{class:"token punctuation"},"("),s("s "),n("span",{class:"token operator"},"=>"),s(` s
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Index"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"users"'),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ApplyOrdering"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Id"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},'// default ascending its equal to "Id asc"'),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" response "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-method"},[n("span",{class:"token function"},"SearchAsync"),n("span",{class:"token generic class-name"},[n("span",{class:"token punctuation"},"<"),s("User"),n("span",{class:"token punctuation"},">")])]),n("span",{class:"token punctuation"},"("),s("s "),n("span",{class:"token operator"},"=>"),s(` s
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Index"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"users"'),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ApplyOrdering"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Id desc"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// use descending ordering"),s(`

`),n("span",{class:"token comment"},"// multiple orderings example"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" response "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-method"},[n("span",{class:"token function"},"SearchAsync"),n("span",{class:"token generic class-name"},[n("span",{class:"token punctuation"},"<"),s("User"),n("span",{class:"token punctuation"},">")])]),n("span",{class:"token punctuation"},"("),s("s "),n("span",{class:"token operator"},"=>"),s(` s
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Index"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"users"'),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ApplyOrdering"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Id desc, FirstName asc, LastName"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br")])],-1),y=n("div",{class:"language-csharp ext-cs line-numbers-mode"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token comment"},"// asc - desc"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" gq "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"GridifyQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(" OrderBy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"Id"'),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},'// default ascending its equal to "Id asc"'),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" gq "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"GridifyQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(" OrderBy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"Id desc"'),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// use descending ordering"),s(`

`),n("span",{class:"token comment"},"// multiple orderings example"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" gq "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"GridifyQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(" OrderBy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"Id desc, FirstName asc, LastName"'),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br")])],-1),f=n("div",{class:"language-csharp ext-cs line-numbers-mode"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" builder "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},[s("QueryBuilder"),n("span",{class:"token punctuation"},"<"),s("Person"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// asc - desc"),s(`
builder`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddOrderBy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Id"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},'// default ascending its equal to "Id asc"'),s(`
builder`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddOrderBy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Id desc"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// use descending ordering"),s(`

`),n("span",{class:"token comment"},"// multiple orderings example"),s(`
builder`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddOrderBy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Id desc, FirstName asc, LastName"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br")])],-1);function _(h,w){const t=c("CodeGroupItem"),o=c("CodeGroup");return l(),p(r,null,[k,d,m,b,a(o,null,{default:e(()=>[a(t,{title:"Elasticsearch Extensions"},{default:e(()=>[g]),_:1}),a(t,{title:"GridifyQuery"},{default:e(()=>[y]),_:1}),a(t,{title:"QueryBuilder"},{default:e(()=>[f]),_:1})]),_:1})],64)}var I=u(i,[["render",_]]);export{I as default};
