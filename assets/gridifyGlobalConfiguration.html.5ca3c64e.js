import{r,o as l,c as s,b as e,a as o,w as i,F as d,d as n,e as a}from"./app.d8b64c72.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const p={},h=n('<h1 id="gridifyglobalconfiguration" tabindex="-1"><a class="header-anchor" href="#gridifyglobalconfiguration" aria-hidden="true">#</a> GridifyGlobalConfiguration</h1><p>Using this class you can change the default behavior and configuration of the Gridify library.</p><h2 id="general-configurations" tabindex="-1"><a class="header-anchor" href="#general-configurations" aria-hidden="true">#</a> General configurations</h2><h3 id="defaultpagesize" tabindex="-1"><a class="header-anchor" href="#defaultpagesize" aria-hidden="true">#</a> DefaultPageSize</h3><p>The default page size for the paging methods when no page size is specified.</p><ul><li>type: <code>int</code></li><li>default: <code>20</code></li></ul><h3 id="casesensitivemapper" tabindex="-1"><a class="header-anchor" href="#casesensitivemapper" aria-hidden="true">#</a> CaseSensitiveMapper</h3><p>By default mappings are case insensitive. For example, <code>name=John</code> and <code>Name=John</code> are considered equal. You can change this behavior by setting this property to <code>true</code>.</p>',8),u=e("li",null,[a("type: "),e("code",null,"bool")],-1),f=e("li",null,[a("default: "),e("code",null,"false")],-1),m=a("related to: "),y=a("GridifyMapper - CaseSensitive"),g=n('<h3 id="allownullsearch" tabindex="-1"><a class="header-anchor" href="#allownullsearch" aria-hidden="true">#</a> AllowNullSearch</h3><p>This option enables the <code>null</code> keyword in filtering operations, for example, <code>name=null</code> searches for all records with a null value for the <code>name</code> field not the string <code>&quot;null&quot;</code>. if you need to search for the string <code>&quot;null&quot;</code> you can disable this option.</p>',2),b=e("li",null,[a("type: "),e("code",null,"bool")],-1),_=e("li",null,[a("default: "),e("code",null,"true")],-1),k=a("related to: "),w=a("GridifyMapper - AllowNullSearch"),x=e("h3",{id:"ignorenotmappedfields",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ignorenotmappedfields","aria-hidden":"true"},"#"),a(" IgnoreNotMappedFields")],-1),v=e("p",null,"If true, in filtering and ordering operations, gridify doesn't return any exceptions when a mapping is not defined for the given field.",-1),C=e("li",null,[a("type: "),e("code",null,"bool")],-1),F=e("li",null,[a("default: "),e("code",null,"false")],-1),M=a("related to: "),N=a("GridifyMapper - IgnoreNotMappedFields"),E=n(`<h3 id="disablenullchecks" tabindex="-1"><a class="header-anchor" href="#disablenullchecks" aria-hidden="true">#</a> DisableNullChecks</h3><p>On nested collections by default gridify adds a null checking condition to prevent the null reference exceptions</p><p>e.g <code>() =&gt; field != null &amp;&amp; field....</code></p><p>some ORMs like NHibernate don&#39;t support this. You can disable this behavior by setting this option to true.</p><ul><li>type: <code>bool</code></li><li>default: <code>false</code></li></ul><h2 id="customoperators" tabindex="-1"><a class="header-anchor" href="#customoperators" aria-hidden="true">#</a> CustomOperators</h2><p>Using the <code>Register</code> method of this property you can add your own custom operators.</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code> GridifyGlobalConfiguration<span class="token punctuation">.</span>CustomOperators<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Register</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MyCustomOperator<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,8),G=a("To learn more about custom operators, see "),S=a("Custom operator"),L=n('<h2 id="entityframework" tabindex="-1"><a class="header-anchor" href="#entityframework" aria-hidden="true">#</a> EntityFramework</h2><h3 id="entityframeworkcompatibilitylayer" tabindex="-1"><a class="header-anchor" href="#entityframeworkcompatibilitylayer" aria-hidden="true">#</a> EntityFrameworkCompatibilityLayer</h3><p>Setting this property to <code>true</code> Enables the EntityFramework Compatibility layer to make the generated expressions compatible whit entity framework.</p><ul><li>type: <code>bool</code></li><li>default: <code>false</code></li></ul>',4),q={class:"custom-container tip"},z=e("p",{class:"custom-container-title"},"TIP",-1),O=a("Lean more about the "),R=a("compatibility layer"),T=n('<h3 id="enableentityframeworkcompatibilitylayer" tabindex="-1"><a class="header-anchor" href="#enableentityframeworkcompatibilitylayer" aria-hidden="true">#</a> EnableEntityFrameworkCompatibilityLayer()</h3><p>Simply sets the <a href="#entityframeworkcompatibilitylayer">EntityFrameworkCompatibilityLayer</a> property to <code>true</code>.</p><h3 id="disableentityframeworkcompatibilitylayer" tabindex="-1"><a class="header-anchor" href="#disableentityframeworkcompatibilitylayer" aria-hidden="true">#</a> DisableEntityFrameworkCompatibilityLayer()</h3><p>Simply sets the <a href="#entityframeworkcompatibilitylayer">EntityFrameworkCompatibilityLayer</a> property to <code>false</code>.</p>',4);function B(I,V){const t=r("RouterLink");return l(),s(d,null,[h,e("ul",null,[u,f,e("li",null,[m,o(t,{to:"/guide/gridifyMapper.html#casesensitive"},{default:i(()=>[y]),_:1})])]),g,e("ul",null,[b,_,e("li",null,[k,o(t,{to:"/guide/gridifyMapper.html#allownullsearch"},{default:i(()=>[w]),_:1})])]),x,v,e("ul",null,[C,F,e("li",null,[M,o(t,{to:"/guide/gridifyMapper.html#ignorenotmappedfields"},{default:i(()=>[N]),_:1})])]),E,e("p",null,[G,o(t,{to:"/guide/filtering.html#custom-operators"},{default:i(()=>[S]),_:1})]),L,e("div",q,[z,e("p",null,[O,o(t,{to:"/guide/entity-framework.html#compatibility-layer"},{default:i(()=>[R]),_:1})])]),T],64)}var A=c(p,[["render",B]]);export{A as default};
