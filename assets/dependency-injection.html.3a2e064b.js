import{r as p,o as c,c as l,a,w as e,F as r,d as i,b as n,e as s}from"./app.d8b64c72.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const k={},m=i(`<h1 id="dependency-injection" tabindex="-1"><a class="header-anchor" href="#dependency-injection" aria-hidden="true">#</a> Dependency Injection</h1><p>Gridify offers a powerful feature that enables you to streamline data mapping and configurations in your application by integrating with the Dependency Injection (DI) container. By registering your mapping profiles with DI, you can achieve cleaner, more maintainable code and improved separation of concerns. This section provides an overview of how to register your GridifyMapper configurations with DI.</p><h2 id="register-gridifymapper-with-di" tabindex="-1"><a class="header-anchor" href="#register-gridifymapper-with-di" aria-hidden="true">#</a> Register GridifyMapper with DI</h2><p>Registering Gridify mapping with DI is a straightforward process. You&#39;ll define mapping profiles for your models and then register them in the DI container. Follow these steps to get started:</p><h3 id="_1-define-mapping-profiles" tabindex="-1"><a class="header-anchor" href="#_1-define-mapping-profiles" aria-hidden="true">#</a> 1. Define Mapping Profiles</h3><p>Create mapping profiles by inheriting from <code>GridifyMapper&lt;T&gt;</code>, where <code>T</code> represents the type you want to map. Configure your mappings within these profile classes.</p><p>Example:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WeatherForecastGridifyMapper</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">GridifyMapper<span class="token punctuation">&lt;</span>WeatherForecast<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">WeatherForecastGridifyMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Define your mappings here</span>
        <span class="token function">AddMap</span><span class="token punctuation">(</span><span class="token string">&quot;summary&quot;</span><span class="token punctuation">,</span> q <span class="token operator">=&gt;</span> q<span class="token punctuation">.</span>Summary<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">AddMap</span><span class="token punctuation">(</span><span class="token string">&quot;temp&quot;</span><span class="token punctuation">,</span> q <span class="token operator">=&gt;</span> q<span class="token punctuation">.</span>TemperatureC<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// optionally you can customize the configuration for each mapper</span>
        Configuration<span class="token punctuation">.</span>CaseSensitive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        Configuration<span class="token punctuation">.</span>AllowNullSearch <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        Configuration<span class="token punctuation">.</span>IgnoreNotMappedFields <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_2-register-mapping-profiles" tabindex="-1"><a class="header-anchor" href="#_2-register-mapping-profiles" aria-hidden="true">#</a> 2. Register Mapping Profiles</h3><p>Utilize the <code>AddGridifyMappers</code> extension method available on the IServiceCollection to scan your assembly and register all mapping profiles.</p><p>Example:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Gridify</span><span class="token punctuation">;</span> <span class="token comment">// Make sure to include the necessary namespace</span>
<span class="token comment">// ...</span>

<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureServices</span><span class="token punctuation">(</span><span class="token class-name">IServiceCollection</span> services<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// Other service registrations</span>

    services<span class="token punctuation">.</span><span class="token function">AddGridifyMappers</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Program</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Assembly<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_3-inject-and-use-mappers" tabindex="-1"><a class="header-anchor" href="#_3-inject-and-use-mappers" aria-hidden="true">#</a> 3. Inject and Use Mappers</h3><p>Once you&#39;ve registered the mapping profiles, you can inject the corresponding <code>IGridifyMapper&lt;T&gt;</code> interfaces into your services or controllers.</p><p>Example:</p>`,15),d=n("div",{class:"language-csharp ext-cs line-numbers-mode"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"WeatherForecastController"),s(),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token type-list"},[n("span",{class:"token class-name"},"ControllerBase")]),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
   `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"readonly"),s(),n("span",{class:"token class-name"},[s("IGridifyMapper"),n("span",{class:"token punctuation"},"<"),s("WeatherForecast"),n("span",{class:"token punctuation"},">")]),s(" _mapper"),n("span",{class:"token punctuation"},";"),s(`

   `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token function"},"WeatherForecastController"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[s("IGridifyMapper"),n("span",{class:"token punctuation"},"<"),s("WeatherForecast"),n("span",{class:"token punctuation"},">")]),s(" mapper"),n("span",{class:"token punctuation"},")"),s(`
   `),n("span",{class:"token punctuation"},"{"),s(`
       _mapper `),n("span",{class:"token operator"},"="),s(" mapper"),n("span",{class:"token punctuation"},";"),s(`
   `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"HttpGet"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),s("Name "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"GetWeatherForecast"'),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),s(`
   `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[s("Paging"),n("span",{class:"token punctuation"},"<"),s("WeatherForecast"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"Get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"FromQuery")]),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token class-name"},"GridifyQuery"),s(" query"),n("span",{class:"token punctuation"},")"),s(`
   `),n("span",{class:"token punctuation"},"{"),s(`
       `),n("span",{class:"token class-name"},[s("IQueryable"),n("span",{class:"token punctuation"},"<"),s("WeatherForecast"),n("span",{class:"token punctuation"},">")]),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"GetWeatherForecasts"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

       `),n("span",{class:"token comment"},"// You can pass the mapper to the GridifyExtension"),s(`
       `),n("span",{class:"token keyword"},"return"),s(" result"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Gridify"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},","),s(" _mapper"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
   `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br")])],-1),b=n("div",{class:"language-csharp ext-cs line-numbers-mode"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"WeatherForecastController"),s(),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token type-list"},[n("span",{class:"token class-name"},"ControllerBase")]),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"readonly"),s(),n("span",{class:"token class-name"},[s("IGridifyMapper"),n("span",{class:"token punctuation"},"<"),s("WeatherForecast"),n("span",{class:"token punctuation"},">")]),s(" _mapper"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token function"},"WeatherForecastController"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[s("IGridifyMapper"),n("span",{class:"token punctuation"},"<"),s("WeatherForecast"),n("span",{class:"token punctuation"},">")]),s(" mapper"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        _mapper `),n("span",{class:"token operator"},"="),s(" mapper"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"HttpGet"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),s("Name "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"GetWeatherForecast"'),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[s("IEnumerable"),n("span",{class:"token punctuation"},"<"),s("WeatherForecast"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"Get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"FromQuery")]),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token class-name"},"GridifyQuery"),s(" query"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"GetWeatherForecasts"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" queryBuilder "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},[s("QueryBuilder"),n("span",{class:"token punctuation"},"<"),s("WeatherForecast"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"UseCustomMapper"),n("span",{class:"token punctuation"},"("),s("_mapper"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddQuery"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token keyword"},"return"),s(" queryBuilder"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Build"),n("span",{class:"token punctuation"},"("),s("result"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br")])],-1);function h(y,f){const t=p("CodeGroupItem"),o=p("CodeGroup");return c(),l(r,null,[m,a(o,null,{default:e(()=>[a(t,{title:"Extensions"},{default:e(()=>[d]),_:1}),a(t,{title:"QueryBuilder"},{default:e(()=>[b]),_:1})]),_:1})],64)}var v=u(k,[["render",h]]);export{v as default};
