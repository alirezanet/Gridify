import{_ as a,c as i,a3 as o,o as t}from"./chunks/framework.CcqIaAxI.js";const h=JSON.parse('{"title":"GridifyGlobalConfiguration","description":"","frontmatter":{},"headers":[],"relativePath":"guide/gridifyGlobalConfiguration.md","filePath":"guide/gridifyGlobalConfiguration.md"}'),l={name:"guide/gridifyGlobalConfiguration.md"};function r(n,e,s,d,c,p){return t(),i("div",null,e[0]||(e[0]=[o('<h1 id="gridifyglobalconfiguration" tabindex="-1">GridifyGlobalConfiguration <a class="header-anchor" href="#gridifyglobalconfiguration" aria-label="Permalink to &quot;GridifyGlobalConfiguration&quot;">​</a></h1><p>Using this class you can change the default behavior and configuration of the Gridify library.</p><h2 id="general-configurations" tabindex="-1">General configurations <a class="header-anchor" href="#general-configurations" aria-label="Permalink to &quot;General configurations&quot;">​</a></h2><h3 id="defaultpagesize" tabindex="-1">DefaultPageSize <a class="header-anchor" href="#defaultpagesize" aria-label="Permalink to &quot;DefaultPageSize&quot;">​</a></h3><p>The default page size for the paging methods when no page size is specified.</p><ul><li>type: <code>int</code></li><li>default: <code>20</code></li></ul><h3 id="casesensitivemapper" tabindex="-1">CaseSensitiveMapper <a class="header-anchor" href="#casesensitivemapper" aria-label="Permalink to &quot;CaseSensitiveMapper&quot;">​</a></h3><p>By default mappings are case insensitive. For example, <code>name=John</code> and <code>Name=John</code> are considered equal. You can change this behavior by setting this property to <code>true</code>.</p><ul><li>type: <code>bool</code></li><li>default: <code>false</code></li><li>related to: <a href="./gridifyMapper#casesensitive">GridifyMapper - CaseSensitive</a></li></ul><h3 id="allownullsearch" tabindex="-1">AllowNullSearch <a class="header-anchor" href="#allownullsearch" aria-label="Permalink to &quot;AllowNullSearch&quot;">​</a></h3><p>This option enables the <code>null</code> keyword in filtering operations, for example, <code>name=null</code> searches for all records with a null value for the <code>name</code> field not the string <code>&quot;null&quot;</code>. if you need to search for the string <code>&quot;null&quot;</code> you can disable this option.</p><ul><li>type: <code>bool</code></li><li>default: <code>true</code></li><li>related to: <a href="./gridifyMapper#allownullsearch">GridifyMapper - AllowNullSearch</a></li></ul><h3 id="ignorenotmappedfields" tabindex="-1">IgnoreNotMappedFields <a class="header-anchor" href="#ignorenotmappedfields" aria-label="Permalink to &quot;IgnoreNotMappedFields&quot;">​</a></h3><p>If true, in filtering and ordering operations, gridify doesn&#39;t return any exceptions when a mapping is not defined for the given field.</p><ul><li>type: <code>bool</code></li><li>default: <code>false</code></li><li>related to: <a href="./gridifyMapper#ignorenotmappedfields">GridifyMapper - IgnoreNotMappedFields</a></li></ul><h3 id="disablenullchecks" tabindex="-1">DisableNullChecks <a class="header-anchor" href="#disablenullchecks" aria-label="Permalink to &quot;DisableNullChecks&quot;">​</a></h3><p>On nested collections by default gridify adds a null checking condition to prevent the null reference exceptions</p><p>e.g <code>() =&gt; field != null &amp;&amp; field....</code></p><p>some ORMs like NHibernate don&#39;t support this. You can disable this behavior by setting this option to true.</p><ul><li>type: <code>bool</code></li><li>default: <code>false</code></li></ul><h3 id="caseinsensitivefiltering" tabindex="-1">CaseInsensitiveFiltering <a class="header-anchor" href="#caseinsensitivefiltering" aria-label="Permalink to &quot;CaseInsensitiveFiltering&quot;">​</a></h3><p>If true, string comparison operations are case insensitive by default.</p><ul><li>type: <code>bool</code></li><li>default: <code>false</code></li></ul><h3 id="defaultdatetimekind" tabindex="-1">DefaultDateTimeKind <a class="header-anchor" href="#defaultdatetimekind" aria-label="Permalink to &quot;DefaultDateTimeKind&quot;">​</a></h3><p>By default, Gridify uses the <code>DateTimeKind.Unspecified</code> when parsing dates. You can change this behavior by setting this property to <code>DateTimeKind.Utc</code> or <code>DateTimeKind.Local</code>. This option is useful when you want to use Gridify with a database that requires a specific <code>DateTimeKind</code>, for example when using npgsql and postgresql.</p><ul><li>type: <code>DateTimeKind</code></li><li>default: <code>null</code></li></ul><h2 id="customoperators" tabindex="-1">CustomOperators <a class="header-anchor" href="#customoperators" aria-label="Permalink to &quot;CustomOperators&quot;">​</a></h2><p>Using the <code>Register</code> method of this property you can add your own custom operators.</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GridifyGlobalConfiguration.CustomOperators.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MyCustomOperator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;();</span></span></code></pre></div><p>To learn more about custom operators, see <a href="./filtering#custom-operators">Custom operator</a></p>',30)]))}const f=a(l,[["render",r]]);export{h as __pageData,f as default};
