import{d as n}from"./app.d8b64c72.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="automapper" tabindex="-1"><a class="header-anchor" href="#automapper" aria-hidden="true">#</a> AutoMapper</h1><p>Gridify is completely compatible with AutoMapper. Also, these two packages can help each other nicely. We can use Gridify for filtering, sorting, and paging and AutoMapper for the projection.</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// AutoMapper ProjectTo + Filtering Only, example</span>
<span class="token class-name"><span class="token keyword">var</span></span> query <span class="token operator">=</span> personRepo<span class="token punctuation">.</span><span class="token function">ApplyFiltering</span><span class="token punctuation">(</span>gridifyQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ProjectTo</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PersonDTO<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// AutoMapper ProjectTo + Filtering + Ordering + Paging, example</span>
<span class="token class-name">QueryablePaging<span class="token punctuation">&lt;</span>Person<span class="token punctuation">&gt;</span></span> qp <span class="token operator">=</span> personRepo<span class="token punctuation">.</span><span class="token function">GridifyQueryable</span><span class="token punctuation">(</span>gridifyQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Paging<span class="token punctuation">&lt;</span>Person<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>qp<span class="token punctuation">.</span>Count<span class="token punctuation">,</span> qp<span class="token punctuation">.</span>Query<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ProjectTo</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PersonDTO<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="gridifyto" tabindex="-1"><a class="header-anchor" href="#gridifyto" aria-hidden="true">#</a> GridifyTo!</h2><p>Filtering, Ordering, Paging, and Projection are all done with <code>GridifyTo</code>.</p><p>Gridify library does not have a built-in <code>GridifyTo</code> extension method because we don&#39;t want to have AutoMapper dependency. but if you are using AutoMapper in your project, I recommend you to add the bellow extension method to your project.</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">Paging<span class="token punctuation">&lt;</span>TDestination<span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">GridifyTo</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TSource<span class="token punctuation">,</span> TDestination<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>
   <span class="token keyword">this</span> <span class="token class-name">IQueryable<span class="token punctuation">&lt;</span>TSource<span class="token punctuation">&gt;</span></span> query<span class="token punctuation">,</span> <span class="token class-name">IMapper</span> autoMapper<span class="token punctuation">,</span> <span class="token class-name">IGridifyQuery</span> gridifyQuery<span class="token punctuation">,</span> <span class="token class-name">IGridifyMapper<span class="token punctuation">&lt;</span>TSource<span class="token punctuation">&gt;</span></span> mapper <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
   <span class="token class-name"><span class="token keyword">var</span></span> res <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">GridifyQueryable</span><span class="token punctuation">(</span>gridifyQuery<span class="token punctuation">,</span> mapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Paging<span class="token punctuation">&lt;</span>TDestination<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Count<span class="token punctuation">,</span> res<span class="token punctuation">.</span>Query<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ProjectTo</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TDestination<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>autoMapper<span class="token punctuation">.</span>ConfigurationProvider<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// only if you have Gridify.EntityFramework package installed.</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>Paging<span class="token punctuation">&lt;</span>TDestination<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">GridifyToAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TSource<span class="token punctuation">,</span> TDestination<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>
   <span class="token keyword">this</span> <span class="token class-name">IQueryable<span class="token punctuation">&lt;</span>TSource<span class="token punctuation">&gt;</span></span> query<span class="token punctuation">,</span> <span class="token class-name">IMapper</span> autoMapper<span class="token punctuation">,</span> <span class="token class-name">IGridifyQuery</span> gridifyQuery<span class="token punctuation">,</span> <span class="token class-name">IGridifyMapper<span class="token punctuation">&lt;</span>TSource<span class="token punctuation">&gt;</span></span> mapper <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
   <span class="token class-name"><span class="token keyword">var</span></span> res <span class="token operator">=</span> <span class="token keyword">await</span> query<span class="token punctuation">.</span><span class="token function">GridifyQueryableAsync</span><span class="token punctuation">(</span>gridifyQuery<span class="token punctuation">,</span> mapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Paging<span class="token punctuation">&lt;</span>TDestination<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Count<span class="token punctuation">,</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span>Query<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ProjectTo</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TDestination<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>autoMapper<span class="token punctuation">.</span>ConfigurationProvider<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToListAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,9);function t(e,o){return p}var l=s(a,[["render",t]]);export{l as default};
