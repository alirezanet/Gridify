import{_ as a,c as e,a3 as i,o as d}from"./chunks/framework.CcqIaAxI.js";const h=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md"}'),r={name:"guide/index.md"};function l(n,t,s,f,o,g){return d(),e("div",null,t[0]||(t[0]=[i('<h1 id="introduction" tabindex="-1" data-v-62a102f3>Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;" data-v-62a102f3>​</a></h1><p data-v-62a102f3>Greetings!</p><p data-v-62a102f3>Gridify is an exceptional dynamic LINQ library designed to simplify the process of converting strings into LINQ queries. It offers remarkable performance and ease-of-use, making it effortless to apply filtering, sorting, and pagination utilizing text-based data.</p><h2 id="features" tabindex="-1" data-v-62a102f3>Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;" data-v-62a102f3>​</a></h2><p data-v-62a102f3>Here are some notable features of Gridify:</p><ul data-v-62a102f3><li data-v-62a102f3>Fast and user-friendly</li><li data-v-62a102f3>Supports filtering, sorting, and pagination</li><li data-v-62a102f3>Enables conversion from strings to LINQ queries</li><li data-v-62a102f3>Supports nested queries and sub-collections</li><li data-v-62a102f3>Allows mapping from strings to objects</li><li data-v-62a102f3>Supports query compilation</li><li data-v-62a102f3>Supports DocumentDBs</li><li data-v-62a102f3>Compatible with collection indexes</li><li data-v-62a102f3>Custom operators</li><li data-v-62a102f3>Can be used with any collection that supports LINQ</li><li data-v-62a102f3>Compatible with object-mappers like AutoMapper</li><li data-v-62a102f3>Compatible with ORMs, particularly <a href="./extensions/entityframework" data-v-62a102f3>Entity Framework</a></li><li data-v-62a102f3>Supports <a href="./extensions/elasticsearch" data-v-62a102f3>Elasticsearch</a> DSL query</li><li data-v-62a102f3>Javascript/Typescript <a href="./extensions/gridify-client" data-v-62a102f3>gridify-client</a></li></ul><h2 id="examples" tabindex="-1" data-v-62a102f3>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;" data-v-62a102f3>​</a></h2><p data-v-62a102f3>To provide a better understanding of Gridify&#39;s functionality, we have prepared a few examples:</p><ul data-v-62a102f3><li data-v-62a102f3><a href="./../example/api-controller" data-v-62a102f3>Using Gridify in API Controllers</a></li><li data-v-62a102f3>More examples coming soon...</li></ul><h2 id="performance" tabindex="-1" data-v-62a102f3>Performance <a class="header-anchor" href="#performance" aria-label="Permalink to &quot;Performance&quot;" data-v-62a102f3>​</a></h2><p data-v-62a102f3>Filtering is the most expensive feature in Gridify. The following benchmark compares filtering in various popular dynamic LINQ libraries. Interestingly, Gridify outperforms even Native LINQ in terms of speed. It&#39;s worth mentioning that other features like Pagination and Sorting in Gridify have minimal impact on performance.</p><table tabindex="0" data-v-62a102f3><thead data-v-62a102f3><tr data-v-62a102f3><th data-v-62a102f3>Method</th><th style="text-align:right;" data-v-62a102f3>Mean</th><th style="text-align:right;" data-v-62a102f3>Error</th><th style="text-align:right;" data-v-62a102f3>StdDev</th><th style="text-align:right;" data-v-62a102f3>Ratio</th><th style="text-align:right;" data-v-62a102f3>Allocated</th><th style="text-align:right;" data-v-62a102f3>Alloc Ratio</th></tr></thead><tbody data-v-62a102f3><tr data-v-62a102f3><td data-v-62a102f3>Gridify</td><td style="text-align:right;" data-v-62a102f3>599.8 us</td><td style="text-align:right;" data-v-62a102f3>2.76 us</td><td style="text-align:right;" data-v-62a102f3>2.45 us</td><td style="text-align:right;" data-v-62a102f3>0.92</td><td style="text-align:right;" data-v-62a102f3>36.36 KB</td><td style="text-align:right;" data-v-62a102f3>1.11</td></tr><tr data-v-62a102f3><td data-v-62a102f3>Native_LINQ</td><td style="text-align:right;" data-v-62a102f3>649.9 us</td><td style="text-align:right;" data-v-62a102f3>2.55 us</td><td style="text-align:right;" data-v-62a102f3>2.38 us</td><td style="text-align:right;" data-v-62a102f3>1.00</td><td style="text-align:right;" data-v-62a102f3>32.74 KB</td><td style="text-align:right;" data-v-62a102f3>1.00</td></tr><tr data-v-62a102f3><td data-v-62a102f3>DynamicLinq</td><td style="text-align:right;" data-v-62a102f3>734.8 us</td><td style="text-align:right;" data-v-62a102f3>13.90 us</td><td style="text-align:right;" data-v-62a102f3>13.01 us</td><td style="text-align:right;" data-v-62a102f3>1.13</td><td style="text-align:right;" data-v-62a102f3>119.4 KB</td><td style="text-align:right;" data-v-62a102f3>3.65</td></tr><tr data-v-62a102f3><td data-v-62a102f3>Sieve</td><td style="text-align:right;" data-v-62a102f3>1,190.9 us</td><td style="text-align:right;" data-v-62a102f3>7.41 us</td><td style="text-align:right;" data-v-62a102f3>6.93 us</td><td style="text-align:right;" data-v-62a102f3>1.83</td><td style="text-align:right;" data-v-62a102f3>53.05 KB</td><td style="text-align:right;" data-v-62a102f3>1.62</td></tr><tr data-v-62a102f3><td data-v-62a102f3>Fop</td><td style="text-align:right;" data-v-62a102f3>2,637.6 us</td><td style="text-align:right;" data-v-62a102f3>8.59 us</td><td style="text-align:right;" data-v-62a102f3>7.61 us</td><td style="text-align:right;" data-v-62a102f3>4.06</td><td style="text-align:right;" data-v-62a102f3>321.57 KB</td><td style="text-align:right;" data-v-62a102f3>9.82</td></tr><tr data-v-62a102f3><td data-v-62a102f3>CSharp_Scripting</td><td style="text-align:right;" data-v-62a102f3>216,863.8 us</td><td style="text-align:right;" data-v-62a102f3>4,295.66 us</td><td style="text-align:right;" data-v-62a102f3>6,021.92 us</td><td style="text-align:right;" data-v-62a102f3>336.64</td><td style="text-align:right;" data-v-62a102f3>23660.26 KB</td><td style="text-align:right;" data-v-62a102f3>722.71</td></tr></tbody></table><details class="details custom-block" data-v-62a102f3><summary data-v-62a102f3>Details</summary><p data-v-62a102f3>BenchmarkDotNet v0.13.10, Windows 11 (10.0.22621.2715/22H2/2022Update/SunValley2) 12th Gen Intel Core i7-12800H, 1 CPU, 20 logical and 14 physical cores .NET SDK 8.0.100 [Host] : .NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2</p><p data-v-62a102f3>This Benchmark is available <a href="https://github.com/alirezanet/Gridify/blob/master/benchmark/LibraryComparisionFilteringBenchmark.cs" target="_blank" rel="noreferrer" data-v-62a102f3>Here</a></p></details>',13)]))}const p=a(r,[["render",l],["__scopeId","data-v-62a102f3"]]);export{h as __pageData,p as default};
