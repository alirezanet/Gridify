import{r as n,o as d,c as s,b as e,a,w as t,F as r,d as l,e as i}from"./app.d8b64c72.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const h={},u=l('<h1 id="gridifyglobalconfiguration" tabindex="-1"><a class="header-anchor" href="#gridifyglobalconfiguration" aria-hidden="true">#</a> GridifyGlobalConfiguration</h1><p>Using this class you can change the default behavior and configuration of the Gridify library.</p><h2 id="general-configurations" tabindex="-1"><a class="header-anchor" href="#general-configurations" aria-hidden="true">#</a> General configurations</h2><h3 id="defaultpagesize" tabindex="-1"><a class="header-anchor" href="#defaultpagesize" aria-hidden="true">#</a> DefaultPageSize</h3><p>The default page size for the paging methods when no page size is specified.</p><ul><li>type: <code>int</code></li><li>default: <code>20</code></li></ul><h3 id="casesensitivemapper" tabindex="-1"><a class="header-anchor" href="#casesensitivemapper" aria-hidden="true">#</a> CaseSensitiveMapper</h3><p>By default mappings are case insensitive. For example, <code>name=John</code> and <code>Name=John</code> are considered equal. You can change this behavior by setting this property to <code>true</code>.</p>',8),p=e("li",null,[i("type: "),e("code",null,"bool")],-1),f=e("li",null,[i("default: "),e("code",null,"false")],-1),g=i("related to: "),_=i("GridifyMapper - CaseSensitive"),b=l('<h3 id="allownullsearch" tabindex="-1"><a class="header-anchor" href="#allownullsearch" aria-hidden="true">#</a> AllowNullSearch</h3><p>This option enables the <code>null</code> keyword in filtering operations, for example, <code>name=null</code> searches for all records with a null value for the <code>name</code> field not the string <code>&quot;null&quot;</code>. if you need to search for the string <code>&quot;null&quot;</code> you can disable this option.</p>',2),m=e("li",null,[i("type: "),e("code",null,"bool")],-1),y=e("li",null,[i("default: "),e("code",null,"true")],-1),x=i("related to: "),v=i("GridifyMapper - AllowNullSearch"),w=e("h3",{id:"ignorenotmappedfields",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ignorenotmappedfields","aria-hidden":"true"},"#"),i(" IgnoreNotMappedFields")],-1),N=e("p",null,"If true, in filtering and ordering operations, gridify doesn't return any exceptions when a mapping is not defined for the given field.",-1),k=e("li",null,[i("type: "),e("code",null,"bool")],-1),M=e("li",null,[i("default: "),e("code",null,"false")],-1),G=i("related to: "),C=i("GridifyMapper - IgnoreNotMappedFields"),S=l('<h3 id="disablenullchecks" tabindex="-1"><a class="header-anchor" href="#disablenullchecks" aria-hidden="true">#</a> DisableNullChecks</h3><p>On nested collections by default gridify adds a null checking condition to prevent the null reference exceptions</p><p>e.g <code>() =&gt; field != null &amp;&amp; field....</code></p><p>some ORMs like NHibernate don&#39;t support this. You can disable this behavior by setting this option to true.</p><ul><li>type: <code>bool</code></li><li>default: <code>false</code></li></ul>',5);function q(z,F){const o=n("RouterLink");return d(),s(r,null,[u,e("ul",null,[p,f,e("li",null,[g,a(o,{to:"/guide/snippets/gridifyMapper.html#casesensitive"},{default:t(()=>[_]),_:1})])]),b,e("ul",null,[m,y,e("li",null,[x,a(o,{to:"/guide/snippets/gridifyMapper.html#allownullsearch"},{default:t(()=>[v]),_:1})])]),w,N,e("ul",null,[k,M,e("li",null,[G,a(o,{to:"/guide/snippets/gridifyMapper.html#ignorenotmappedfields"},{default:t(()=>[C]),_:1})])]),S],64)}var I=c(h,[["render",q]]);export{I as default};
