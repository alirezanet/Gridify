import{r as a,o as d,c as o,b as t,a as i,w as s,F as h,e,d as l}from"./app.d8b64c72.js";import{_ as g}from"./plugin-vue_export-helper.21dcd24c.js";const c={},p=t("h1",{id:"introduction",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),e(" Introduction")],-1),u=t("p",null,"Gridify is a dynamic LINQ library that simplifies the process of converting strings to LINQ queries. With exceptional performance and ease-of-use, Gridify makes it effortless to apply filtering, sorting, and pagination using text-based data.",-1),y=e("Gridify.Elasticsearch is an extension of Gridify, that provides an ability to generate Elasticsearch DSL queries. Read more about Gridify.Elasticsearch in "),x=e("a separate thread of the documentation"),m=e("."),f=l('<h2 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h2><ul><li>Fast and easy to use</li><li>Supports filtering, sorting, and pagination</li><li>Supports <code>string</code> to LINQ conversion</li><li>Supports nested queries and sub-collections</li><li>Supports <code>string</code> to <code>object</code> mapping</li><li>Supports query compilation</li><li>Supports collection indexes</li><li>Custom Operators</li><li>Compatible with ORMs, especially Entity Framework</li><li>Can be used on every collection that LINQ supports</li><li>Compatible with object-mappers like AutoMapper</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>To better illustrate how Gridify works, we&#39;ve prepared a few examples:</p>',4),_=e("Using Gridify in API Controllers"),b=t("li",null,"Coming soon ...",-1),v=l('<h2 id="performance" tabindex="-1"><a class="header-anchor" href="#performance" aria-hidden="true">#</a> Performance</h2><p>Filtering is the most expensive feature in Gridify. The following benchmark compares filtering in various popular dynamic LINQ libraries. Interestingly, Gridify outperforms even Native LINQ in terms of speed. It&#39;s worth mentioning that other features like Pagination and Sorting in Gridify have minimal impact on performance.</p><table><thead><tr><th>Method</th><th style="text-align:right;">Mean</th><th style="text-align:right;">Error</th><th style="text-align:right;">StdDev</th><th style="text-align:right;">Ratio</th><th style="text-align:right;">Allocated</th><th style="text-align:right;">Alloc Ratio</th></tr></thead><tbody><tr><td>Gridify</td><td style="text-align:right;">599.8 us</td><td style="text-align:right;">2.76 us</td><td style="text-align:right;">2.45 us</td><td style="text-align:right;">0.92</td><td style="text-align:right;">36.36 KB</td><td style="text-align:right;">1.11</td></tr><tr><td>Native_LINQ</td><td style="text-align:right;">649.9 us</td><td style="text-align:right;">2.55 us</td><td style="text-align:right;">2.38 us</td><td style="text-align:right;">1.00</td><td style="text-align:right;">32.74 KB</td><td style="text-align:right;">1.00</td></tr><tr><td>DynamicLinq</td><td style="text-align:right;">734.8 us</td><td style="text-align:right;">13.90 us</td><td style="text-align:right;">13.01 us</td><td style="text-align:right;">1.13</td><td style="text-align:right;">119.4 KB</td><td style="text-align:right;">3.65</td></tr><tr><td>Sieve</td><td style="text-align:right;">1,190.9 us</td><td style="text-align:right;">7.41 us</td><td style="text-align:right;">6.93 us</td><td style="text-align:right;">1.83</td><td style="text-align:right;">53.05 KB</td><td style="text-align:right;">1.62</td></tr><tr><td>Fop</td><td style="text-align:right;">2,637.6 us</td><td style="text-align:right;">8.59 us</td><td style="text-align:right;">7.61 us</td><td style="text-align:right;">4.06</td><td style="text-align:right;">321.57 KB</td><td style="text-align:right;">9.82</td></tr><tr><td>CSharp_Scripting</td><td style="text-align:right;">216,863.8 us</td><td style="text-align:right;">4,295.66 us</td><td style="text-align:right;">6,021.92 us</td><td style="text-align:right;">336.64</td><td style="text-align:right;">23660.26 KB</td><td style="text-align:right;">722.71</td></tr></tbody></table>',3),k={class:"custom-container details"},N=t("p",null,"BenchmarkDotNet v0.13.10, Windows 11 (10.0.22621.2715/22H2/2022Update/SunValley2) 12th Gen Intel Core i7-12800H, 1 CPU, 20 logical and 14 physical cores .NET SDK 8.0.100 [Host] : .NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2",-1),I=e("This Benchmark is available "),S={href:"https://github.com/alirezanet/Gridify/blob/master/benchmark/LibraryComparisionFilteringBenchmark.cs",target:"_blank",rel:"noopener noreferrer"},L=e("Here");function G(w,B){const r=a("RouterLink"),n=a("ExternalLinkIcon");return d(),o(h,null,[p,u,t("p",null,[y,i(r,{to:"/guide/elasticsearch/"},{default:s(()=>[x]),_:1}),m]),f,t("ul",null,[t("li",null,[i(r,{to:"/example/api-controller.html"},{default:s(()=>[_]),_:1})]),b]),v,t("details",k,[N,t("p",null,[I,t("a",S,[L,i(n)])])])],64)}var F=g(c,[["render",G]]);export{F as default};
