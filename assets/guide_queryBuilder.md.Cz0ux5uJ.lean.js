import{_ as e,c as i,a3 as a,o as s}from"./chunks/framework.CcqIaAxI.js";const g=JSON.parse('{"title":"QueryBuilder","description":"","frontmatter":{},"headers":[],"relativePath":"guide/queryBuilder.md","filePath":"guide/queryBuilder.md"}'),d={name:"guide/queryBuilder.md"};function r(n,t,l,p,o,h){return s(),i("div",null,t[0]||(t[0]=[a(`<h1 id="querybuilder" tabindex="-1">QueryBuilder <a class="header-anchor" href="#querybuilder" aria-label="Permalink to &quot;QueryBuilder&quot;">â€‹</a></h1><p>The <code>QueryBuilder</code> class is really useful if you want to manually build your query Or when you don&#39;t want to use the extension methods.</p><table tabindex="0"><thead><tr><th>Method</th><th>Description</th></tr></thead><tbody><tr><td>AddCondition</td><td>Adds a string base Filtering query</td></tr><tr><td>AddOrderBy</td><td>Adds a string base Ordering query</td></tr><tr><td>ConfigurePaging</td><td>Configure Page and PageSize</td></tr><tr><td>AddQuery</td><td>Accepts a GridifyQuery object to configure filtering,ordering and paging</td></tr><tr><td>UseCustomMapper</td><td>Accepts a GridifyMapper to use in build methods</td></tr><tr><td>UseEmptyMapper</td><td>Setup an Empty new GridifyMapper without auto generated mappings</td></tr><tr><td>AddMap</td><td>Add a single Map to existing mapper</td></tr><tr><td>RemoveMap</td><td>Remove a single Map from existing mapper</td></tr><tr><td>ConfigureDefaultMapper</td><td>Configuring default mapper when we didn&#39;t use AddMapper method</td></tr><tr><td>IsValid</td><td>Validates Condition, OrderBy, Query , Mapper and returns a bool</td></tr><tr><td>Build</td><td>Applies filtering ordering and paging to a queryable context</td></tr><tr><td>BuildCompiled</td><td>Compiles the expressions and returns a delegate for applying filtering ordering and paging to a enumerable collection</td></tr><tr><td>BuildFilteringExpression</td><td>Returns filtering expression that can be compiled for later use for enumerable collections</td></tr><tr><td>BuildEvaluator</td><td>Returns an evaluator delegate that can be use to evaluate an queryable context</td></tr><tr><td>BuildCompiledEvaluator</td><td>Returns an compiled evaluator delegate that can be use to evaluate an enumerable collection</td></tr><tr><td>BuildWithPaging</td><td>Applies filtering ordering and paging to a context, and returns paging result</td></tr><tr><td>BuildWithPagingCompiled</td><td>Compiles the expressions and returns a delegate for applying filtering ordering and paging to a enumerable collection, that returns paging result</td></tr><tr><td>BuildWithQueryablePaging</td><td>Applies filtering ordering and paging to a context, and returns queryable paging result</td></tr><tr><td>Evaluate</td><td>Directly Evaluate a context to check if all conditions are valid or not</td></tr></tbody></table><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> QueryBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Person</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddCondition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name=John&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddOrderBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age, id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> query</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> builder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(persons);</span></span></code></pre></div>`,4)]))}const k=e(d,[["render",r]]);export{g as __pageData,k as default};
