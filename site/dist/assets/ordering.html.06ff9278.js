import{r as o,c as l,b as a,w as e,F as p,a as n,d as s,o as r}from"./app.ece2968d.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const i={},d=n("h1",{id:"ordering-syntax",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ordering-syntax","aria-hidden":"true"},"#"),s(" Ordering Syntax")],-1),k=n("p",null,[s("The ordering query expression can be built with a comma-separated field names followed by "),n("strong",null,[n("code",null,"asc")]),s(" or "),n("strong",null,[n("code",null,"desc")]),s(" keywords.")],-1),m=n("p",null,"by default, if you don't add these keywords, gridify assumes you need Ascending ordering.",-1),b=n("p",null,"ascending and descending",-1),g=n("div",{class:"language-csharp ext-cs line-numbers-mode"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token comment"},"// asc - desc"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" x "),n("span",{class:"token operator"},"="),s(" personsRepo"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ApplyOrdering"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Id"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},'// default ascending its equal to "Id asc"'),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" x "),n("span",{class:"token operator"},"="),s(" personsRepo"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ApplyOrdering"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Id desc"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// use descending ordering"),s(`

`),n("span",{class:"token comment"},"// multiple orderings example"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" x "),n("span",{class:"token operator"},"="),s(" personsRepo"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ApplyOrdering"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Id desc, FirstName asc, LastName"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br")])],-1),y=n("div",{class:"language-csharp ext-cs line-numbers-mode"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token comment"},"// asc - desc"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" gq "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"GridifyQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(" OrderBy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"Id"'),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},'// default ascending its equal to "Id asc"'),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" gq "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"GridifyQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(" OrderBy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"Id desc"'),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// use descending ordering"),s(`

`),n("span",{class:"token comment"},"// multiple orderings example"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" gq "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"GridifyQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(" OrderBy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"Id desc, FirstName asc, LastName"'),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br")])],-1),_=n("div",{class:"language-csharp ext-cs line-numbers-mode"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" builder "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},[s("QueryBuilder"),n("span",{class:"token punctuation"},"<"),s("Person"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// asc - desc"),s(`
builder`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddOrderBy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Id"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},'// default ascending its equal to "Id asc"'),s(`
builder`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddOrderBy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Id desc"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// use descending ordering"),s(`

`),n("span",{class:"token comment"},"// multiple orderings example"),s(`
builder`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddOrderBy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Id desc, FirstName asc, LastName"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br")])],-1);function f(h,w){const t=o("CodeGroupItem"),c=o("CodeGroup");return r(),l(p,null,[d,k,m,b,a(c,null,{default:e(()=>[a(t,{title:"Extentions"},{default:e(()=>[g]),_:1}),a(t,{title:"GridifyQuery"},{default:e(()=>[y]),_:1}),a(t,{title:"QueryBuilder"},{default:e(()=>[_]),_:1})]),_:1})],64)}var I=u(i,[["render",f]]);export{I as default};
